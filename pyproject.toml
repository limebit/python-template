[project]
name = "custom_module"
version = "0.0.1"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "numpy>=2.0.0",
    "pandas>=2.2.2",
    "polars[pandas]==1.17.0",
    "scikit-learn>=1.5.0",
    "matplotlib>=3.0.0",
    "scipy>=1.0.0",
    "jupyterlab>=4.0.0",
    "tqdm>=4.0.0",
    "torch>=2.0.0",
    "xgboost>=2.0.0",
    "ruff>=0.4.9",
    "pyright>=1.1.370,<1.1.374",
    "pandas-stubs>=2.2.2.240603",
]

[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["custom_module"]

[tool.ruff]
exclude = ["__pycache__", ".git", ".github", ".ruff_cache", ".venv"]
line-length = 88

[tool.ruff.lint]
select = [
    "E",    # PEP 8 codestyle errors
    "F",    # pyflakes
    "I",    # isort
    "N",    # PEP 8 naming
    "DOC",  # Pydoc Linting (preview); complementary to "D"
    "D",    # Pydoc Style; PEP 257
    "FA",   # future annotations linting; PEP 563
    "W",    # pycodestyle warnings; PEP 8
    "SIM",  # flake8 simplify; simplify code
    "ANN",  # flake8 function annotations; PEP 3107
    "B",    # bugbear extension for flake8; opinionated, not based on any PEP
    "C4",   # list/set/dict comprehensions
    "T10",  # Check for debugging leftovers: pdb;idbp imports and set traces
    "EM",   # error messages
    "LOG",  # logging module usage linting
    "G",    # logging format strings
    "T20",  # print statements
    "PYI",  # lint stub files .pyi
    "PT",   # pytest linting
    "RET",  # return values
    "TCH",  # type checking
    "PTH",  # pathlib usage
    "PERF", # performance linting
    "FURB", # modern python code patterns
    "RUF",  # ruff specific rules
    "FBT",  # no bool as function param
    "TD",   # todo linting
    "C90",  # mccabe complexity
]
preview = true
ignore = [
    "E501", # Line length managed by formatter
    # indentation linters conflicting with formatter:
    "W191",
    "E111",
    "E114",
    "E117",
    "D206",
    # quotation linters conflicting with formatter:
    "D300",
    "Q000",
    "Q001",
    "Q002",
    "Q003",
    # comma linters conflicting with formatter:
    "COM812",
    "COM819",
    # string concatenation linters conflicting with formatter:
    "ISC001",
    "ISC002",
]

[tool.ruff.lint.per-file-ignores]
"*/__init__.py" = ["D", "DOC"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.pycodestyle]
max-doc-length = 88

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 88

[tool.pyright]
typeCheckingMode = "strict"
reportPrivateUsage = false
reportIncompatibleMethodOverride = false
reportUnknownArgumentType = false
reportUnknownVariableType = false
reportUnknownMemberType = false
reportMissingModuleSource = false
reportMissingTypeStubs = false
enableTypeIgnoreComments = false
